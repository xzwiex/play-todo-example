{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 2358dd5f338246bdca49","webpack:///./app/assets/javascripts/main.coffee","webpack:///./app/assets/javascripts/services/todoService.coffee","webpack:///./app/assets/javascripts/controllers/todoListController.coffee"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","angular","config","$compileProvider","debugInfoEnabled","TodoService","$http","$q","this","prototype","todoList","get","then","data","addTodo","entity","put","updateTodo","post","$inject","service","TodoListController","$log","todoService","filters","log","fetchTodos","toInsert","text","finished","weight","_this","todos","copy","newTodoTitle","controller"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,UAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GE5ChCW,QAAQP,OAAO,sBAAuBQ,QAAS,mBAAoB,SAACC,GFgD/D,ME/CHA,GAAiBC,kBAAiB,MAIpCd,EAAQ,GACRA,EAAQ,IFyDF,SAASI,EAAQD,GG/DvB,GAAAY,EAAMA,GAAA,WACU,QAAAA,GAACC,EAAQC,GAARC,KAACF,MAADA,EAAQE,KAACD,GAADA,EH0FtB,MAlBAF,GAAYI,UGtEbC,SAAW,WHuER,MGtEDF,MAACF,MAAMK,IAAI,cAAcC,KAAM,SAACC,GHuE7B,MGvEsCA,GAAKA,QH2E/CR,EAAYI,UGzEbK,QAAU,SAACC,GH0ER,MGzEDP,MAACF,MAAMU,IAAI,YAAaD,GAAQH,KAAM,SAACC,GH0EpC,MG1E6CA,GAAKA,QH8EtDR,EAAYI,UG5EbQ,WAAa,SAACF,GH6EX,MG5EDP,MAACF,MAAMY,KAAK,eAAgBH,GAAQH,KAAM,SAACC,GH6ExC,MG7EiDA,GAAKA,QHiFnDR,KG/EVA,EAAYc,SAAW,QAAS,MAEhClB,QAAQP,OAAO,mBAAmB0B,QAAQ,cAAef,IHwFnD,SAASX,EAAQD,GItGvB,GAAA4B,EAAMA,GAAA,WAOU,QAAAA,GAACC,EAAOC,GAAPf,KAACc,KAADA,EAAOd,KAACe,YAADA,EAEpBf,KAACgB,QAAU,MACXhB,KAACc,KAAKG,IAAI,oBACVjB,KAACkB,aATH,GAAAC,EJkJC,OIlJDA,IACEC,KAAO,WACPC,UAAW,EACXC,OAAS,GJsHVT,EAAmBZ,UI7GpBiB,WAAa,WJ8GV,MI7GDlB,MAACe,YAAYb,WAAWE,KAAK,SAAAmB,GJ8G1B,MI9G0B,UAACC,GJgHzB,MI/GHD,GAACT,KAAKG,IAAIO,GACVD,EAACC,MAAQA,IAFkBxB,QJqH9Ba,EAAmBZ,UIjHpBK,QAAU,WACR,GAAAC,EJoHC,OIpHDA,GAASd,QAAQgC,KAAKN,GACtBZ,EAAOa,KAAOpB,KAAC0B,aACf1B,KAACe,YAAYT,QAAQC,GAAQH,KAAK,SAAAmB,GJmH/B,MInH+B,YJqH7B,MIpHHA,GAACL,aACDK,EAACG,aAAe,KAFgB1B,QJ0HnCa,EAAmBZ,UItHpBQ,WAAa,SAACF,GJuHX,MIvHsBP,MAACe,YAAYN,WAAWF,IJ0HzCM,KIvHVA,EAAmBF,SAAW,OAAQ,eAGtClB,QAAQP,OAAO,mBAAmByC,WAAW,qBAAsBd","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"public/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tangular.module('todoApplication', []).config([\n\t  '$compileProvider', function($compileProvider) {\n\t    return $compileProvider.debugInfoEnabled(false);\n\t  }\n\t]);\n\t\n\t__webpack_require__(1);\n\t\n\t__webpack_require__(2);\n\t\n\t\n\t/*require './components/ulogin-panel.coffee'\n\t */\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar TodoService;\n\t\n\tTodoService = (function() {\n\t  function TodoService($http, $q) {\n\t    this.$http = $http;\n\t    this.$q = $q;\n\t  }\n\t\n\t  TodoService.prototype.todoList = function() {\n\t    return this.$http.get('/todo/list').then(function(data) {\n\t      return data.data;\n\t    });\n\t  };\n\t\n\t  TodoService.prototype.addTodo = function(entity) {\n\t    return this.$http.put('/todo/add', entity).then(function(data) {\n\t      return data.data;\n\t    });\n\t  };\n\t\n\t  TodoService.prototype.updateTodo = function(entity) {\n\t    return this.$http.post('/todo/update', entity).then(function(data) {\n\t      return data.data;\n\t    });\n\t  };\n\t\n\t  return TodoService;\n\t\n\t})();\n\t\n\tTodoService.$inject = ['$http', '$q'];\n\t\n\tangular.module('todoApplication').service('todoService', TodoService);\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar TodoListController;\n\t\n\tTodoListController = (function() {\n\t  var toInsert;\n\t\n\t  toInsert = {\n\t    text: 'New todo',\n\t    finished: false,\n\t    weight: 0\n\t  };\n\t\n\t  function TodoListController($log, todoService) {\n\t    this.$log = $log;\n\t    this.todoService = todoService;\n\t    this.filters = 'all';\n\t    this.$log.log('Controller ready');\n\t    this.fetchTodos();\n\t  }\n\t\n\t  TodoListController.prototype.fetchTodos = function() {\n\t    return this.todoService.todoList().then((function(_this) {\n\t      return function(todos) {\n\t        _this.$log.log(todos);\n\t        return _this.todos = todos;\n\t      };\n\t    })(this));\n\t  };\n\t\n\t  TodoListController.prototype.addTodo = function() {\n\t    var entity;\n\t    entity = angular.copy(toInsert);\n\t    entity.text = this.newTodoTitle;\n\t    return this.todoService.addTodo(entity).then((function(_this) {\n\t      return function() {\n\t        _this.fetchTodos();\n\t        return _this.newTodoTitle = '';\n\t      };\n\t    })(this));\n\t  };\n\t\n\t  TodoListController.prototype.updateTodo = function(entity) {\n\t    return this.todoService.updateTodo(entity);\n\t  };\n\t\n\t  return TodoListController;\n\t\n\t})();\n\t\n\tTodoListController.$inject = ['$log', 'todoService'];\n\t\n\tangular.module('todoApplication').controller('todoListController', TodoListController);\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"public/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2358dd5f338246bdca49\n **/","angular.module('todoApplication', []).config( ['$compileProvider', ($compileProvider) ->\n  $compileProvider.debugInfoEnabled(false)\n])\n\n\nrequire './services/todoService.coffee'\nrequire './controllers/todoListController.coffee'\n###require './components/ulogin-panel.coffee'\n###\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/main.coffee\n **/","class TodoService\n  constructor : (@$http, @$q) ->\n\n  todoList : ->\n    @$http.get('/todo/list').then( (data) -> data.data )\n\n  addTodo : (entity) ->\n    @$http.put('/todo/add', entity).then( (data) -> data.data )\n\n  updateTodo : (entity) ->\n    @$http.post('/todo/update', entity).then( (data) -> data.data )\n\nTodoService.$inject = ['$http', '$q' ]\n\nangular.module('todoApplication').service 'todoService', TodoService\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/services/todoService.coffee\n **/","class TodoListController\n\n  toInsert =\n    text : 'New todo'\n    finished : false\n    weight : 0\n\n  constructor : (@$log, @todoService) ->\n\n    @filters = 'all'\n    @$log.log 'Controller ready'\n    @fetchTodos()\n\n\n  fetchTodos : ->\n    @todoService.todoList().then (todos) =>\n      @$log.log todos\n      @todos = todos\n\n  addTodo : ->\n    entity = angular.copy toInsert\n    entity.text = @newTodoTitle\n    @todoService.addTodo(entity).then =>\n      @fetchTodos()\n      @newTodoTitle = ''\n\n  updateTodo : (entity) -> @todoService.updateTodo(entity)\n\n\nTodoListController.$inject = ['$log', 'todoService']\n\n\nangular.module('todoApplication').controller 'todoListController', TodoListController\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/assets/javascripts/controllers/todoListController.coffee\n **/"],"sourceRoot":""}